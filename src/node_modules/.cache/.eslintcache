[{"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\index.js":"1","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\App.js":"2","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\reportWebVitals.js":"3","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\SignIn.jsx":"4","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\SignUp.jsx":"5","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\Dashboard.jsx":"6","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\AddCustomer.jsx":"7","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\NewDeals.jsx":"8","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\Home.jsx":"9","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\PersonsInfo.jsx":"10","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\About.jsx":"11"},{"size":517,"mtime":1617089836813,"results":"12","hashOfConfig":"13"},{"size":1427,"mtime":1618732160110,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1617089836829,"results":"15","hashOfConfig":"13"},{"size":3977,"mtime":1618489780855,"results":"16","hashOfConfig":"13"},{"size":6448,"mtime":1618553037120,"results":"17","hashOfConfig":"13"},{"size":11183,"mtime":1618810607140,"results":"18","hashOfConfig":"13"},{"size":9603,"mtime":1618731816895,"results":"19","hashOfConfig":"13"},{"size":15082,"mtime":1618733502873,"results":"20","hashOfConfig":"13"},{"size":464,"mtime":1618725973549,"results":"21","hashOfConfig":"13"},{"size":1484,"mtime":1618485366957,"results":"22","hashOfConfig":"13"},{"size":7121,"mtime":1618733807362,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1d3kzpv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\index.js",[],["50","51"],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\App.js",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\reportWebVitals.js",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\SignIn.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\SignUp.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\Dashboard.jsx",["52","53"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { BrowserRouter as Router, Link, withRouter } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chart from \"react-google-charts\";\r\nimport '../pages/styles.css'\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AccountCircleIcon />,\r\n    <AddBoxIcon />,\r\n\r\n\r\n\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/dashboard/about', '/admin/dashboard/newdeals','/admin/dashboard/personinfo'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0\r\n            , 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction Dashboard({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className=\"appbar\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                    style={{ backgroundColor: '#107AE0' }}\r\n                >\r\n\r\n                    <Toolbar>\r\n\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <div className='item-1'>\r\n                            <Typography variant=\"h6\" noWrap>\r\n                                Admin Dashboard\r\n                        </Typography>\r\n                        </div>\r\n\r\n                        <div className='item-2'>\r\n\r\n                            <IconButton>\r\n                                <Avatar src=\"/broken-image.jpg\" />\r\n\r\n                            </IconButton>\r\n                        </div>\r\n\r\n                        <div className='item-3'>\r\n                            <Button color=\"inherit\">Logout</Button>\r\n                        </div>\r\n\r\n\r\n                    </Toolbar>\r\n\r\n                </AppBar>\r\n\r\n\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"About\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"New Deals\"} />\r\n                        </ListItem>\r\n                        \r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n            </Router>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <Typography paragraph>\r\n                    <div>\r\n                        <div className='chart-div'>\r\n                            <Chart\r\n                                width={'600px'}\r\n                                height={'400px'}\r\n                                chartType=\"Scatter\"\r\n                                loader={<div>Loading Chart</div>}\r\n                                data={[\r\n                                    ['Student ID', 'Hours Studied', 'Final'],\r\n                                    [0, 0, 67],\r\n                                    [1, 1, 88],\r\n                                    [2, 2, 77],\r\n                                    [3, 3, 93],\r\n                                    [4, 4, 85],\r\n                                    [5, 5, 91],\r\n                                    [6, 6, 71],\r\n                                    [7, 7, 78],\r\n                                    [8, 8, 93],\r\n                                    [9, 9, 80],\r\n                                    [10, 10, 82],\r\n                                    [11, 0, 75],\r\n                                    [12, 5, 80],\r\n                                    [13, 3, 90],\r\n                                    [14, 1, 72],\r\n                                    [15, 5, 75],\r\n                                    [16, 6, 68],\r\n                                    [17, 7, 98],\r\n                                    [18, 3, 82],\r\n                                    [19, 9, 94],\r\n                                    [20, 2, 79],\r\n                                    [21, 2, 95],\r\n                                    [22, 2, 86],\r\n                                    [23, 3, 67],\r\n                                    [24, 4, 60],\r\n                                    [25, 2, 80],\r\n                                    [26, 6, 92],\r\n                                    [27, 2, 81],\r\n                                    [28, 8, 79],\r\n                                    [29, 9, 83],\r\n                                ]}\r\n                                options={{\r\n                                    // Material design options\r\n                                    chart: {\r\n                                        title: \"Students' Final Grades\",\r\n                                        subtitle: 'based on hours studied',\r\n                                    },\r\n                                    width: 800,\r\n                                    height: 500,\r\n                                    series: {\r\n                                        0: { axis: 'hours studied' },\r\n                                        1: { axis: 'final grade' },\r\n                                    },\r\n                                    axes: {\r\n                                        y: {\r\n                                            'hours studied': { label: 'Hours Studied' },\r\n                                            'final grade': { label: 'Final Exam Grade' },\r\n                                        },\r\n                                    },\r\n                                }}\r\n                                rootProps={{ 'data-testid': '4' }}\r\n                                legendToggle\r\n                            />\r\n                        </div> <br></br>\r\n                        <br></br>\r\n\r\n\r\n                        <div className=\"homepage-container\">\r\n                            <div onClick={()=>history.push('/admin/dashboard/personinfo')} style={{ backgroundColor: '#2196f3', width: '150px', height: '150px', alignItems: 'center', justifyContent: 'center', marginBottom: 20 }}>age group above 60</div>\r\n                            <div onClick={()=>history.push('/admin/dashboard/personinfo')} style={{ backgroundColor: '#2196f3', width: '150px', height: '150px', alignItems: 'center', justifyContent: 'center', marginBottom: 20 }}>age group from 40-60</div>\r\n                            <div onClick={()=>history.push('/admin/dashboard/personinfo')} style={{ backgroundColor: '#2196f3', width: '150px', height: '150px', marginBottom: 20 }}>age group from 20-40</div>\r\n                        </div>\r\n                    </div>\r\n                </Typography>\r\n\r\n            </main>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Dashboard);","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\AddCustomer.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\NewDeals.jsx",["54","55","56"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, lighten } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button';\r\nimport '../pages/styles.css'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AccountCircleIcon />,\r\n    <AddBoxIcon />,\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/dashboard/about', '/admin/dashboard/newdeals'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        marginLeft: 240,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: - drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction NewDeals({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n    const [age, setAge] = React.useState('');\r\n    \r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n\r\n    const schema = yup.object().shape({\r\n        dealName: yup.string().required(\"This field is required\"),\r\n        category: yup.string().required(\"This field is required\"),\r\n        discountPrice: yup.string().required(\"This field is required\"),\r\n        originalPrice: yup.string().required(\"This field is required\"),\r\n    })\r\n\r\n\r\n      const formik = useFormik(\r\n        {\r\n            initialValues: {\r\n                dealName:\"\",\r\n                category:\"\",\r\n                discountPrice: \"\",\r\n                productName:\"\",\r\n                originalPrice: \"\",\r\n                \r\n            },\r\n            validationSchema: schema,\r\n            onSubmit: (data) => {\r\n                console.log(data)\r\n            }\r\n        }\r\n    )\r\n\r\n    const prod=[];\r\n    \r\n\r\n    return (\r\n         console.log(formik),\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                    style={{ backgroundColor: '#107AE0' }}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Admin Dashboard\r\n          </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"About\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"New Deals\"} />\r\n                        </ListItem>\r\n\r\n\r\n\r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n            </Router>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <Typography paragraph>\r\n                    <div className='outer-div'>\r\n                        <div className=\"parent-div\">\r\n                            <div style={{ backgroundColor: '#107AE0', fontWeight: 'bold', boxShadow: '0 5px 8px 0 rgba(0, 0, 0, 0.5), 0 4px 20px 0 rgba(0, 0, 0, 0.19)', color: 'white', textShadow: '1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue', height: '50px', paddingTop: '11px', paddingBottom: '2px', paddingLeft: '9px' }}>\r\n\r\n                                Add New Hot Deals\r\n                    </div>\r\n                            <div className=\"div-content\">\r\n                                <form onSubmit={formik.handleSubmit}>\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item sm={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Deal Name\"\r\n                                                style={{ width: 500 ,backgroundColor: 'white'}}\r\n                                                name=\"dealName\"\r\n                                                values={formik.values.dealName}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                                error={(formik.touched.dealName && formik.errors.dealName) ? true : false}\r\n                                                helperText={(formik.touched.dealName && formik.errors.dealName)? formik.errors.dealName : \"\"}\r\n                                                variant=\"outlined\"></TextField>\r\n                                        </Grid>\r\n\r\n                                        <Grid item sm={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"category\"\r\n                                                style={{ width: 500,backgroundColor: 'white' }}\r\n                                                name=\"category\"\r\n                                                values={formik.values.category}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                                error={(formik.touched.category && formik.errors.category) ? true : false}\r\n                                                helperText={(formik.touched.category && formik.errors.category)? formik.errors.category : \"\"}\r\n                                                variant=\"outlined\"></TextField>\r\n                                        </Grid>\r\n                                    </Grid><br></br>\r\n\r\n\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item sm={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Discount Price\"\r\n                                                style={{ width: 500,backgroundColor: 'white'}}\r\n                                                name=\"discountPrice\"\r\n                                                values={formik.values.discountPrice}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                                error={(formik.touched.category && formik.errors.discountPrice) ? true : false}\r\n                                                helperText={(formik.touched.discountPrice && formik.errors.discountPrice)? formik.errors.discountPrice: \"\"}\r\n                                                variant=\"outlined\"></TextField>\r\n                                        </Grid>\r\n\r\n                                        <Grid item sm={6}>\r\n                                            <FormControl\r\n                                                variant=\"outlined\"\r\n                                                className={classes.formControl}>\r\n                                                <InputLabel id=\"demo-simple-select-outlined-label\">Product Name</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                                    id=\"demo-simple-select-outlined\"\r\n                                                    // value={age}\r\n                                                    onChange={handleChange}\r\n                                                    label=\"Product Name\"\r\n                                                    style={{ width: 500, backgroundColor: 'white' }}\r\n                                                >\r\n                                                 {\r\n                                                   prod.length>0 ?  prod.map((ele,index)=><MenuItem value={ele} key={index}>{ele}</MenuItem> ) : <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                                                   \r\n                                                 }\r\n                                                    {/*  */}\r\n                                                    \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid><br></br>\r\n\r\n\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item sm={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Original Price\"\r\n                                                style={{ width: 500,backgroundColor: 'white' }}\r\n                                                name=\"originalPrice\"\r\n                                                values={formik.values.originalPrice}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={formik.handleBlur}\r\n                                                error={(formik.touched.originalPrice && formik.errors.originalPrice) ? true : false}\r\n                                                helperText={(formik.touched.originalPrice && formik.errors.originalPrice)? formik.errors.originalPrice : \"\"}\r\n                                                variant=\"outlined\"></TextField>\r\n                                        </Grid>\r\n                                        <Grid item sm={6}>\r\n                                            <Button variant=\"contained\" id=\"button\" style={{ backgroundColor: '#10E194', width: 250 }} disableElevation type=\"submit\">Save</Button>\r\n                                        </Grid>\r\n\r\n\r\n                                    </Grid><br></br><br></br>\r\n\r\n\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Typography>\r\n\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(NewDeals);","C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\Home.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\PersonsInfo.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\customer-segmentation\\src\\pages\\About.jsx",["57","58"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { BrowserRouter as Router, Link, withRouter } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../pages/styles.css'\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AccountCircleIcon />,\r\n    <AddBoxIcon />,\r\n\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/dashboard/about', '/admin/dashboard/newdeals','/admin/dashboard/personinfo'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0\r\n            , 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction Dashboard({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className=\"appbar\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                    style={{ backgroundColor: '#107AE0' }}\r\n                >\r\n\r\n                    <Toolbar>\r\n\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <div className='item-1'>\r\n                            <Typography variant=\"h6\" noWrap>\r\n                                Admin Dashboard\r\n                        </Typography>\r\n                        </div>\r\n\r\n                        <div className='item-2'>\r\n\r\n                            <IconButton>\r\n                                <Avatar src=\"/broken-image.jpg\" />\r\n\r\n                            </IconButton>\r\n                        </div>\r\n\r\n                        <div className='item-3'>\r\n                            <Button color=\"inherit\">Logout</Button>\r\n                        </div>\r\n\r\n\r\n                    </Toolbar>\r\n\r\n                </AppBar>\r\n\r\n\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"About\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"New Deals\"} />\r\n                        </ListItem>\r\n                        \r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n            </Router>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <Typography paragraph>\r\n                    <div>\r\n                        This is about page\r\n                    </div>\r\n                </Typography>\r\n\r\n            </main>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Dashboard);",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":21,"column":35,"nodeType":"65","messageId":"66","endLine":21,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":125,"column":21,"nodeType":"69","messageId":"70","endLine":127,"endColumn":24},{"ruleId":"63","severity":1,"message":"71","line":3,"column":32,"nodeType":"65","messageId":"66","endLine":3,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":94,"column":9,"nodeType":"74","messageId":"75","endLine":94,"endColumn":19},{"ruleId":"63","severity":1,"message":"76","line":121,"column":12,"nodeType":"65","messageId":"66","endLine":121,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":21,"column":35,"nodeType":"65","messageId":"66","endLine":21,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":122,"column":21,"nodeType":"69","messageId":"70","endLine":124,"endColumn":24},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'lighten' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","'age' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]